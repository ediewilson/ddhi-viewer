{"version":3,"sources":["style.min.css","a_components/50_animation/00_core/14_animations/_build.sass","a_components/50_animation/00_core/14_animations/_pulse.sass","a_components/30_typography/00_core/12_mixins/_load_font.sass","c_local/00_configuration/_03_configuration_typography.sass","a_components/10_layout/layout_css_variables/_set_css_variables.sass","a_components/10_layout/responsive_images/_img.sass","a_components/10_layout/standardized_top_level_primitives/_standardized_top_level_primitives.sass","c_local/00_configuration/_02_configuration_colour.sass","a_components/10_layout/mobile_classes/_mobile.sass","a_components/10_layout/00_core/12_mixins/_breakpoints.sass","a_components/20_colour/root_colour_variables/_colour_root_variables.sass","a_components/30_typography/standardized_typography/_typography.sass","a_components/30_typography/00_core/12_mixins/_line_height.sass","a_components/30_typography/standardized_typography/_text_collection.sass","a_components/30_typography/00_core/12_mixins/_font_size.sass","a_components/10_layout/00_core/12_mixins/_standardized_block_spacing.sass","a_components/30_typography/standardized_typography/_heading_collection.sass","a_components/30_typography/standardized_typography/_anchor.sass","a_components/50_animation/00_core/12_mixins/_transition.sass","a_components/30_typography/00_core/12_mixins/_link_underline.sass","a_components/30_typography/00_core/12_mixins/_inline_text_link.sass","a_components/30_typography/standardized_lists/_list_collection.sass","a_components/30_typography/body_text_anchor_1/_body_text_anchor.sass","a_components/40_ui/ui_element_base/13_definitions/_form_elements.sass","c_local/00_configuration/_01_configuration_layout.sass","c_local/00_configuration/_04_configuration_ui.sass","a_components/40_ui/ui_element_base/12_mixins/_ui_patterns.sass","a_components/40_ui/standardized_forms/_form_collection.sass","a_components/50_animation/standardized_animation/_animation_root_variables.sass","a_components/60_site_elements/figure_normalization/_figure.sass","a_components/60_site_elements/svg_symbol_support/_svg.sass","a_components/30_typography/!fluid_type/_fluid_type_component.sass","a_components/30_typography/00_core/12_mixins/_fluid_type.sass","c_local/00_configuration/_30_configuration_fluid_type.sass","a_components/40_ui/dark_mode/_dark_mode.sass","a_components/60_site_elements/drupal_status_messages/_status_messages.sass","a_components/30_typography/00_core/12_mixins/_material_design_icons.sass","a_components/30_typography/callout_blocks/13_mixins/_callout.sass","a_components/30_typography/standardized_tables/_table_collection.sass","c_local/10_layout/_general.sass","c_local/30_typography/_general.sass","c_local/30_typography/_heading.sass"],"names":[],"mappings":"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","file":"style.min.css","sourcesContent":["/*!\n * sackson-theme v1.0.0\n * A custom Omeka S theme for The Sackson Portal.\n * (c) 2022 Agile Humanities Agency\n * MIT License\n * https://agile.git.beanstalkapp.com/agile-theme-builder-v002.git\n */\n\n@keyframes build{from{opacity:0}to{opacity:1}}@keyframes build-08{from{opacity:0}to{opacity:.8}}@keyframes build-05{from{opacity:0}to{opacity:.5}}@keyframes pulse{0%{opacity:.5;transform:scale(1, 1)}50%{opacity:1;transform:scale(1.1, 1.1)}100%{opacity:.5;transform:scale(1, 1)}}@font-face{font-display:swap;font-family:\"Aleo\";font-style:normal;font-weight:400;src:local(\"Aleo Regular\"),local(\"Aleo-Regular\");src:url(\"../fonts/aleo-400/aleo-normal-400.eot\"),url(\"../fonts/aleo-400/aleo-normal-400.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/aleo-400/aleo-normal-400.otf\") format(\"opentype\"),url(\"../fonts/aleo-400/aleo-normal-400.woff\") format(\"woff\"),url(\"../fonts/aleo-400/aleo-normal-400.woff\") format(\"woff\"),url(\"../fonts/aleo-400/aleo-normal-400.ttf\") format(\"truetype\"),url(\"../fonts/aleo-400/aleo-normal-400.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Aleo\";font-style:italic;font-weight:400;src:local(\"Aleo Italic\"),local(\"Aleo-Italic\");src:url(\"../fonts/aleo-400/aleo-italic-400.eot\"),url(\"../fonts/aleo-400/aleo-italic-400.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/aleo-400/aleo-italic-400.otf\") format(\"opentype\"),url(\"../fonts/aleo-400/aleo-italic-400.woff\") format(\"woff\"),url(\"../fonts/aleo-400/aleo-italic-400.woff\") format(\"woff\"),url(\"../fonts/aleo-400/aleo-italic-400.ttf\") format(\"truetype\"),url(\"../fonts/aleo-400/aleo-italic-400.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Aleo\";font-style:normal;font-weight:700;src:local(\"Aleo Bold Regular\"),local(\"Aleo-Bold-Regular\");src:url(\"../fonts/aleo-700/aleo-normal-700.eot\"),url(\"../fonts/aleo-700/aleo-normal-700.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/aleo-700/aleo-normal-700.otf\") format(\"opentype\"),url(\"../fonts/aleo-700/aleo-normal-700.woff\") format(\"woff\"),url(\"../fonts/aleo-700/aleo-normal-700.woff\") format(\"woff\"),url(\"../fonts/aleo-700/aleo-normal-700.ttf\") format(\"truetype\"),url(\"../fonts/aleo-700/aleo-normal-700.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Aleo\";font-style:italic;font-weight:700;src:local(\"Aleo Bold Italic\"),local(\"Aleo-Bold-Italic\");src:url(\"../fonts/aleo-700/aleo-italic-700.eot\"),url(\"../fonts/aleo-700/aleo-italic-700.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/aleo-700/aleo-italic-700.otf\") format(\"opentype\"),url(\"../fonts/aleo-700/aleo-italic-700.woff\") format(\"woff\"),url(\"../fonts/aleo-700/aleo-italic-700.woff\") format(\"woff\"),url(\"../fonts/aleo-700/aleo-italic-700.ttf\") format(\"truetype\"),url(\"../fonts/aleo-700/aleo-italic-700.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:normal;font-weight:300;src:local(\"Roboto Light Regular\"),local(\"Roboto-Light-Regular\");src:url(\"../fonts/roboto-300/roboto-normal-300.eot\"),url(\"../fonts/roboto-300/roboto-normal-300.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-300/roboto-normal-300.otf\") format(\"opentype\"),url(\"../fonts/roboto-300/roboto-normal-300.woff\") format(\"woff\"),url(\"../fonts/roboto-300/roboto-normal-300.woff\") format(\"woff\"),url(\"../fonts/roboto-300/roboto-normal-300.ttf\") format(\"truetype\"),url(\"../fonts/roboto-300/roboto-normal-300.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:italic;font-weight:300;src:local(\"Roboto Light Italic\"),local(\"Roboto-Light-Italic\");src:url(\"../fonts/roboto-300/roboto-italic-300.eot\"),url(\"../fonts/roboto-300/roboto-italic-300.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-300/roboto-italic-300.otf\") format(\"opentype\"),url(\"../fonts/roboto-300/roboto-italic-300.woff\") format(\"woff\"),url(\"../fonts/roboto-300/roboto-italic-300.woff\") format(\"woff\"),url(\"../fonts/roboto-300/roboto-italic-300.ttf\") format(\"truetype\"),url(\"../fonts/roboto-300/roboto-italic-300.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:normal;font-weight:400;src:local(\"Roboto Regular\"),local(\"Roboto-Regular\");src:url(\"../fonts/roboto-400/roboto-normal-400.eot\"),url(\"../fonts/roboto-400/roboto-normal-400.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-400/roboto-normal-400.otf\") format(\"opentype\"),url(\"../fonts/roboto-400/roboto-normal-400.woff\") format(\"woff\"),url(\"../fonts/roboto-400/roboto-normal-400.woff\") format(\"woff\"),url(\"../fonts/roboto-400/roboto-normal-400.ttf\") format(\"truetype\"),url(\"../fonts/roboto-400/roboto-normal-400.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:italic;font-weight:400;src:local(\"Roboto Italic\"),local(\"Roboto-Italic\");src:url(\"../fonts/roboto-400/roboto-italic-400.eot\"),url(\"../fonts/roboto-400/roboto-italic-400.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-400/roboto-italic-400.otf\") format(\"opentype\"),url(\"../fonts/roboto-400/roboto-italic-400.woff\") format(\"woff\"),url(\"../fonts/roboto-400/roboto-italic-400.woff\") format(\"woff\"),url(\"../fonts/roboto-400/roboto-italic-400.ttf\") format(\"truetype\"),url(\"../fonts/roboto-400/roboto-italic-400.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:normal;font-weight:700;src:local(\"Roboto Bold Regular\"),local(\"Roboto-Bold-Regular\");src:url(\"../fonts/roboto-700/roboto-normal-700.eot\"),url(\"../fonts/roboto-700/roboto-normal-700.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-700/roboto-normal-700.otf\") format(\"opentype\"),url(\"../fonts/roboto-700/roboto-normal-700.woff\") format(\"woff\"),url(\"../fonts/roboto-700/roboto-normal-700.woff\") format(\"woff\"),url(\"../fonts/roboto-700/roboto-normal-700.ttf\") format(\"truetype\"),url(\"../fonts/roboto-700/roboto-normal-700.svg#Calluna Sans\") format(\"svg\")}@font-face{font-display:swap;font-family:\"Roboto\";font-style:italic;font-weight:700;src:local(\"Roboto Bold Italic\"),local(\"Roboto-Bold-Italic\");src:url(\"../fonts/roboto-700/roboto-italic-700.eot\"),url(\"../fonts/roboto-700/roboto-italic-700.eot?#iefix\") format(\"embedded-opentype\"),url(\"../fonts/roboto-700/roboto-italic-700.otf\") format(\"opentype\"),url(\"../fonts/roboto-700/roboto-italic-700.woff\") format(\"woff\"),url(\"../fonts/roboto-700/roboto-italic-700.woff\") format(\"woff\"),url(\"../fonts/roboto-700/roboto-italic-700.ttf\") format(\"truetype\"),url(\"../fonts/roboto-700/roboto-italic-700.svg#Calluna Sans\") format(\"svg\")}:root{--breakpoint-xsml: 336;--breakpoint-sml: 740;--breakpoint-med: 900;--breakpoint-lrg: 1200;--breakpoint-xlrg: 1800;--breakpoint-xxlrg: 2080;--breakpoint-stack: 740;--breakpoint-tablet: 900;--breakpoint-desktop: 1200;--breakpoint-ultrawide: 1800}img{max-width:100%;width:100%;height:auto;border-width:0;vertical-align:middle;-ms-interpolation-mode:bicubic}html{scroll-behaviour:smooth}html,body{height:100%}body{padding:0;margin:0;background-color:#fff}*{box-sizing:border-box}#mobile-header-nav{display:block}@media only screen and (min-width: 56.25em){#mobile-header-nav{display:none}}#mobile-nav-block{display:none}:root{--colour--1: #00693e}:root{--colour--2: #9bc8eb}:root{--colour--3: #003c73}:root{--colour--4: #9d162e}:root{--colour--5: #ffa00f}:root{--colour--6: #000000}:root{--colour--7: #000000}:root{--colour--8: #000000}:root{--colour--9: #000000}:root{--colour--1--shade: #075b39}:root{--colour--1--primary: #00693e}:root{--colour--1--tint: #338765}:root{--colour--1--fade: #b3d2c5}:root{--colour--1--watermark: #e6f0ec}:root{--colour--2--shade: #83a7c4}:root{--colour--2--primary: #9bc8eb}:root{--colour--2--tint: #afd3ef}:root{--colour--2--fade: #e1eff9}:root{--colour--2--watermark: #f5fafd}:root{--colour--3--shade: #073764}:root{--colour--3--primary: #003c73}:root{--colour--3--tint: #33638f}:root{--colour--3--fade: #b3c5d5}:root{--colour--3--watermark: #e6ecf1}:root{--colour--4--shade: #85192c}:root{--colour--4--primary: #9d162e}:root{--colour--4--tint: #b14558}:root{--colour--4--fade: #e2b9c0}:root{--colour--4--watermark: #f5e8ea}:root{--colour--5--shade: #d38714}:root{--colour--5--primary: #ffa00f}:root{--colour--5--tint: #ffb33f}:root{--colour--5--fade: #ffe3b7}:root{--colour--5--watermark: #fff6e7}:root{--colour--6--shade: black}:root{--colour--6--primary: #000000}:root{--colour--6--tint: #1a1a1a}:root{--colour--6--fade: gray}:root{--colour--6--watermark: #cccccc}:root{--colour--7--shade: black}:root{--colour--7--primary: #000000}:root{--colour--7--tint: #1a1a1a}:root{--colour--7--fade: gray}:root{--colour--7--watermark: #cccccc}:root{--colour--8--shade: black}:root{--colour--8--primary: #000000}:root{--colour--8--tint: #1a1a1a}:root{--colour--8--fade: gray}:root{--colour--8--watermark: #cccccc}:root{--colour--9--shade: black}:root{--colour--9--primary: #000000}:root{--colour--9--tint: #1a1a1a}:root{--colour--9--fade: gray}:root{--colour--9--watermark: #cccccc}:root{--colour--black: #232526;--colour--white: #FFFFFF;--colour--impact: #9d162e;--colour--cta: #0b5537}:root{--colour--neutral--10: #e9e9e9}:root{--colour--neutral--20: #d3d3d4}:root{--colour--neutral--30: #bdbebe}:root{--colour--neutral--40: #a7a8a8}:root{--colour--neutral--50: #919293}:root{--colour--neutral--60: #7b7c7d}:root{--colour--neutral--70: #656667}:root{--colour--neutral--80: #4f5151}:root{--colour--neutral--90: #393b3c}html{font-family:Roboto,Helvetica,Arial sans-serif;font-size:100%;color:#232526}@media only screen and (min-width: 21em){html{font-size:100%}}@media only screen and (min-width: 46.25em){html{font-size:100%}}@media only screen and (min-width: 56.25em){html{font-size:100%}}@media only screen and (min-width: 75em){html{font-size:100%}}@media only screen and (min-width: 112.5em){html{font-size:100%}}@media only screen and (min-width: 130em){html{font-size:100%}}body{font-size:1rem;line-height:1.5}p,ol,ul,th,td,dl,dd,dt,address{font-size:1rem;line-height:1.5;margin-top:0;margin-bottom:1.7rem}@media only screen and (min-width: 46.25em){p,ol,ul,th,td,dl,dd,dt,address{margin-bottom:2.125rem}}blockquote{box-sizing:border-box}dl{margin-bottom:1.7rem}dt{font-family:\"Aleo\",Georgia,Times,serif;font-weight:700;text-transform:uppercase}dd{margin-bottom:1.36rem;margin-left:0}menu,dir{margin:0;padding:0}q{quotes:none}abbr[title]{border-bottom:1px dotted #656667;cursor:help}b,strong,.strong{font-weight:600}dfn,.italic{font-style:italic}ins{background-color:#a7a8a8;color:#232526;text-decoration:none}mark{background-color:#a7a8a8;color:#232526;font-style:italic;font-weight:700}pre,code,kbd,samp{font-family:Monaco,Courier New,monospace;font-size:1rem;line-height:0;color:#4f5151}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}sub,sup{position:relative;font-size:.8rem;line-height:0;vertical-align:baselineheight}sup{top:-0.32rem}sub{bottom:-0.16rem}.spaced{letter-spacing:1px}hr{border:0;border-bottom:1px solid #656667;margin-top:0;margin-bottom:1.7rem}@media only screen and (min-width: 46.25em){hr{margin-bottom:4.150390625rem}}h1,h2,h3,h4,h5,h6{margin:0;color:#232526;font-family:\"Aleo\",Georgia,Times,serif;font-weight:700;box-sizing:border-box;line-height:1}h1>a,h2>a,h3>a,h4>a,h5>a,h6>a{color:#232526;text-decoration:none}h1,h2,h3{width:100%}h1,.h1{font-size:3.0517578125rem;line-height:1;margin-top:2.125rem;margin-bottom:1.7rem}h2,.h2{font-size:1.953125rem;line-height:1.2;margin-top:2.125rem;margin-bottom:1.36rem}h3,.h3{font-size:1.5625rem;line-height:1.2;margin-top:2.125rem;margin-bottom:0;text-transform:uppercase}h4,.h4{font-size:1.25rem;line-height:1.2;margin-top:2.125rem;margin-bottom:0}h5,.h5{font-size:1rem;line-height:1.2;margin-top:1.7rem;font-weight:400;font-style:italic;margin-bottom:0}h6,.h6{font-size:1rem;line-height:1.2;margin-top:1.7rem;margin-bottom:0;font-weight:400;color:#4f5151}a{color:#232526;cursor:pointer;text-decoration:none;transition:all .0524288s ease-in 0s}a:hover,a:active{border-bottom:1px solid #232526}main p>a a{color:#232526;cursor:pointer;text-decoration:none;transition:all .065536s ease-in 0s;border-bottom:1px solid #232526}main p>a a:hover,main p>a a:active{border-bottom-color:#232526}ol,ul{margin-top:1.36rem;margin-bottom:1.36rem}li ul,li ol{margin-top:1.7rem;margin-bottom:1.7rem}p>a,p li>a,blockquote>a{color:#232526;border-bottom:1px solid #232526}p>a:hover,p>a:active,p li>a:hover,p li>a:active,blockquote>a:hover,blockquote>a:active{color:#232526}textarea:hover,.btn-ghost:hover,.btn-outline:hover,.btn-inverted:hover,input[type=reset]:hover,input[type=submit]:hover,.btn-submit:hover,input[type=button]:hover,.btn:hover,input[type=url]:hover,input[type=date]:hover,input[type=email]:hover,input[type=password]:hover,input[type=search]:hover,input[type=text]:hover,select:hover,textarea:focus,.btn-ghost:focus,.btn-outline:focus,.btn-inverted:focus,input[type=reset]:focus,input[type=submit]:focus,.btn-submit:focus,input[type=button]:focus,.btn:focus,input[type=url]:focus,input[type=date]:focus,input[type=email]:focus,input[type=password]:focus,input[type=search]:focus,input[type=text]:focus,select:focus,textarea:active,.btn-ghost:active,.btn-outline:active,.btn-inverted:active,input[type=reset]:active,input[type=submit]:active,.btn-submit:active,input[type=button]:active,.btn:active,input[type=url]:active,input[type=date]:active,input[type=email]:active,input[type=password]:active,input[type=search]:active,input[type=text]:active,select:active{text-decoration:none;border-color:#232526;box-shadow:inset 0 0 0 1px #232526;transition:all .2s ease-in 0s}.btn-ghost,.btn-outline,.btn-inverted,input[type=reset],input[type=submit],.btn-submit,input[type=button],.btn,input[type=url],input[type=date],input[type=email],input[type=password],input[type=search],input[type=text],select{display:flex;flex-direction:row;justify-content:flex-start;align-items:center;vertical-align:baseline;box-sizing:border-box;zoom:1;font-family:Roboto,Helvetica,Arial sans-serif;padding:.69632rem;font-size:1rem;line-height:1.7rem;font-weight:400;vertical-align:middle;border-style:solid;border-width:1px;border-color:#a7a8a8;border-radius:0;background-clip:border-box;box-shadow:none;outline:none;transition:all .2s ease-in 0s;max-width:calc(100vw - 1.7rem * 2)}@media only screen and (min-width: 46.25em){.btn-ghost,.btn-outline,.btn-inverted,input[type=reset],input[type=submit],.btn-submit,input[type=button],.btn,input[type=url],input[type=date],input[type=email],input[type=password],input[type=search],input[type=text],select{max-width:calc(100vw - 2.65625rem * 2)}}input[type=url],input[type=date],input[type=email],input[type=password],input[type=search],input[type=text],select{appearance:none;height:50px;min-height:50px}textarea{box-sizing:border-box;max-width:100%;padding:.69632rem;box-shadow:none;border-style:solid;border-width:1px;border-color:#a7a8a8;border-radius:0;background-clip:border-box;transition:all .2s ease-in 0s;max-width:calc(100vw - 1.7rem * 2)}@media only screen and (min-width: 46.25em){textarea{max-width:calc(100vw - 2.65625rem * 2)}}.btn-ghost,.btn-outline,.btn-inverted,input[type=reset],input[type=submit],.btn-submit,input[type=button],.btn{height:50px;flex-shrink:0;border-color:#0b5537;-webkit-appearance:none;justify-content:center;text-align:center;background-clip:border-box;cursor:pointer;min-width:200px;width:320px;max-width:410px;transition:all .2s ease-in 0s;white-space:nowrap}.btn-ghost:hover,.btn-outline:hover,.btn-inverted:hover,input[type=reset]:hover,input[type=submit]:hover,.btn-submit:hover,input[type=button]:hover,.btn:hover,.btn-ghost:focus,.btn-outline:focus,.btn-inverted:focus,input[type=reset]:focus,input[type=submit]:focus,.btn-submit:focus,input[type=button]:focus,.btn:focus,.btn-ghost:active,.btn-outline:active,.btn-inverted:active,input[type=reset]:active,input[type=submit]:active,.btn-submit:active,input[type=button]:active,.btn:active{text-decoration:none;box-shadow:none;transition:all .065536s ease-in 0s}input[type=button],.btn{color:#0b5537;background-color:transparent;border:1px solid #0b5537}input[type=button]:hover,.btn:hover,input[type=button]:focus,.btn:focus,input[type=button]:active,.btn:active{background-color:#fff;color:#9d162e;border:1px solid #9d162e}input[type=submit],.btn-submit{color:#fff;background-color:#232526;border:1px solid #232526}input[type=submit]:hover,.btn-submit:hover,input[type=submit]:focus,.btn-submit:focus,input[type=submit]:active,.btn-submit:active{background-color:#9d162e;color:#fff;border:1px solid #9d162e}input[type=reset]{color:#656667;background-color:#fff;border:1px solid #656667}input[type=reset]:hover,input[type=reset]:focus,input[type=reset]:active{background-color:#656667;color:#9d162e}.btn-inverted{color:transparent;background-color:#0b5537;border:1px solid transparent}.btn-inverted:hover,.btn-inverted:focus,.btn-inverted:active{background-color:#9d162e;color:#0b5537}.btn-outline{color:#7b7c7d;background-color:transparent;border:1px solid #7b7c7d}.btn-outline:hover,.btn-outline:focus,.btn-outline:active{color:#232526;background-color:transparent;border:1px solid #232526}.btn-ghost{color:#fff;background-color:transparent;border:1px solid #fff}.btn-ghost:hover,.btn-ghost:focus,.btn-ghost:active{border:1px solid #fff;background-color:#871327;color:#fff}form{max-width:calc(100vw - 1.7rem * 2)}@media only screen and (min-width: 46.25em){form{max-width:calc(100vw - 2.65625rem * 2)}}input[type=submit]{margin-top:1.7rem}.form-item{margin-top:1.7rem}:root{--animation--heartbeat: 1000;--animation--slidetransition: 1000}figure{margin:0;box-sizing:border-box}figcaption{display:block;box-sizing:border-box;font-weight:normal;font-size:1rem;font-style:italic;color:#232526}svg{width:inherit;height:inherit;fill:inherit}svg .cls-1,svg .cls-2,svg .cls-3{fill:inherit}.fluid-type{font-size:1rem}@media(min-width: 46.25em){.fluid-type{font-size:calc(1rem + 0.25 * (100vw - 46.25em) / 66.25)}}@media(min-width: 112.5em){.fluid-type{font-size:1.25rem}}.fluid-type address,.fluid-type article,.fluid-type aside,.fluid-type section,.fluid-type ul{font-size:1em;line-height:inherit}body.dark{background:#232526;color:#fff}body.dark h1,body.dark h2,body.dark h3,body.dark h4,body.dark h5,body.dark h6{color:#fff}body.dark h1>a,body.dark h2>a,body.dark h3>a,body.dark h4>a,body.dark h5>a,body.dark h6>a{color:#fff}body.dark #secondary-content{background:#444647}body.dark .site-guide-cont i{background:#fff}body.dark .resource-list .item>a{filter:unset}body.dark select{background:none;color:#fff}body.dark .cards{background-color:#f4f4f4}body.dark main th{background:#444647}body.dark main tr:nth-child(2n)>td{background:#2e3031}body.dark .card figure{filter:drop-shadow(1.088rem 1.088rem 1.088rem #919293)}body.dark .btn{color:#fff;border-color:#fff}body.dark .btn:hover{background-color:#232526}body.dark .browse-controls .advanced-search{color:#fff}body.dark a{color:#fff}body.dark #homepage-splash .resource.introduction .introductory-text{background-color:#232526}body.dark option{color:#232526}body.dark #advanced-search .value input{background:inherit;color:#fff}body.dark .remove-value{color:#fff}body.dark .remove-value:hover{background:unset}body.dark #homepage-featured-profiles figure{filter:drop-shadow(1.088rem 1.088rem 1.088rem #919293)}body.dark #feature-tier-3{background:#232526}body.dark #feature-tier-1{background:#232526}body.dark #homepage-splash .down-arrow span{color:#fff}.dark-switch{position:relative;display:inline-block;width:40px;height:24px}.dark-switch input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;-webkit-transition:.4s;transition:.4s}.slider:before{position:absolute;content:\"\";height:16px;width:16px;left:4px;bottom:4px;background-color:#fff;-webkit-transition:.4s;transition:.4s}input:checked+.slider{background-color:#00693e}input:focus+.slider{box-shadow:0 0 1px #00693e}input:checked+.slider:before{-webkit-transform:translateX(16px);-ms-transform:translateX(16px);transform:translateX(16px)}.tl-timenav{background-color:#232526 !important}.tl-timeaxis-background{background:#393b3c !important;border-color:#232526 !important}.tl-timeaxis-tick:before{border-color:#fff !important}.tl-timeaxis-tick-text{color:#fff !important}.tl-slide.tl-slide-titleslide{background:#fff}.tl-attribution{background-color:#444647}.messages{border:none;border-radius:0;padding:1.36rem;box-shadow:none;background-image:none;margin-top:1.7rem;margin-bottom:1.7rem}.messages:before{margin-right:1.088rem}.messages+.messages{margin-top:1.7rem}.messages .messages__item+.messages__item{margin-top:1.36rem}.messages--status{background-color:#e0eedb;color:#5c604e}.messages--status:before{color:rgba(0,0,0,.54);font-family:\"Material Icons\";font-weight:normal;font-style:normal;font-size:24px;display:inline-block;width:1em;height:1em;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;vertical-align:bottom;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\";content:\"check_circle\";color:#81cdbb}.messages--warning{background-color:rgba(255,241,98,.39);color:#66624c}.messages--warning:before{color:rgba(0,0,0,.54);font-family:\"Material Icons\";font-weight:normal;font-style:normal;font-size:24px;display:inline-block;width:1em;height:1em;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;vertical-align:bottom;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\";content:\"warning\";color:#ff6481}.messages--error{background-color:#e9637b;color:#9d162e}.messages--error:before{color:rgba(0,0,0,.54);font-family:\"Material Icons\";font-weight:normal;font-style:normal;font-size:24px;display:inline-block;width:1em;height:1em;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;vertical-align:bottom;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\";content:\"error\";color:#9d162e}.callout-left .callout--main{width:100%}.callout-left .callout--text{--callout-width: 40%}@media only screen and (min-width: 75em){.callout-left .callout--text{position:relative;width:calc(40% + 3.3203125rem);margin:0 0 2.125rem 0;float:left;text-align:right;padding-right:2.125rem;right:calc(3.3203125rem + (var(--callout-width)/2));margin-right:calc((3.3203125rem + (var(--callout-width)/2)) * -1)}.callout-left .callout--text>*:first-child{margin-top:0;padding-top:0}.callout-left .callout--text>*:last-child{margin-bottom:0;padding-bottom:0}}.callout-right .callout--main{width:100%}.callout-right .callout--text{--callout-width: 40%}@media only screen and (min-width: 75em){.callout-right .callout--text{position:relative;width:calc(40% + 3.3203125rem);margin:0 0 2.125rem 0;float:right;padding-left:2.125rem;left:calc(3.3203125rem + (var(--callout-width)/2));margin-left:calc((3.3203125rem + (var(--callout-width)/2)) * -1)}.callout-right .callout--text>*:first-child{margin-top:0;padding-top:0}.callout-right .callout--text>*:last-child{margin-bottom:0;padding-bottom:0}}table{width:100%;border-collapse:collapse}thead{border:0;background-color:#afd3ef}thead tr{border:0}tbody{border-width:0px}tbody tr{background-color:#f5fafd}tbody tr:first-child{border-top:4px solid #fff}tbody tr:hover{background-color:#e1eff9}tbody tr:hover td,tbody tr:hover td a{color:inherit}tbody tr:hover a{text-decoration:underline}tr{border-bottom:4px solid #fff}th,td{vertical-align:top;margin:0;padding:1.088rem;font-size:.8rem;background-color:transparent}@media only screen and (min-width: 75em){th,td{min-width:125px}}th p,th div,td p,td div{font-size:inherit}td{color:#232526}th{color:#232526;margin:0;text-align:left;text-transform:uppercase;font-weight:700;border-bottom:0}body{padding:2.125rem}html{font-weight:300;color:#393b3c}.slogan{font-family:\"Aleo\",Georgia,Times,serif;font-size:1.36rem}.deck{font-family:\"Aleo\",Georgia,Times,serif;font-size:1.25rem;line-height:1.5}.deck p{font-size:inherit;font-family:inherit}.deck p:last-child{margin-bottom:0}label,.label{text-transform:uppercase;font-weight:400;font-size:.8rem}dt{font-weight:700;font-size:.8rem;margin-bottom:0}.attribution,.field_attribution{display:flex;flex-direction:row;align-items:center}.attribution:before,.field_attribution:before{margin-right:.8704rem;content:\"\";display:block;width:1.088rem;height:1.088rem;background:url(\"../img/svg/ui/arrow.svg\") no-repeat}.field_byline{font-weight:700}.field_byline p{font-weight:inherit}.field_tags a{text-decoration:underline}a:hover{color:#9d162e}main a{text-decoration:underline}h1{font-weight:400}h2{font-weight:400}h3{font-family:Roboto,Helvetica,Arial sans-serif;font-weight:400;font-size:1.25rem;line-height:1.4;text-transform:none}header+h3,date+h3,.surtitle+h3{margin-top:.69632rem}.block>h2{margin-top:0}","@keyframes build\n  from\n    opacity: 0\n  to\n    opacity: 1\n    \n@keyframes build-08\n  from\n    opacity: 0\n  to\n    opacity: 0.8\n    \n@keyframes build-05\n  from\n    opacity: 0\n  to\n    opacity: 0.5","@keyframes pulse\n  0%\n    opacity: 0.5\n    transform: scale(1, 1)\n  50%\n    opacity: 1\n    transform: scale(1.1, 1.1)\n  100%\n    opacity: 0.5\n    transform: scale(1, 1)","/**\n  * @file _load_font.sass \n  * @description  A font loading utility based on standardized filenames. \n  *\n  * The font loader is keyed to standardized naming.\n  * Each weight of a font must have its own directory, named $basefilename-$weight. Weights should be numeric (100-900).\n  * The folder should contain any style variants of that weight, named $basefilename-$style-$weight.$extension\n  * A full array of webfonts is expected for each style (.eot, .woff, .otf, .svg, .ttf)\n  *\n  * Example: times-new-roman-400/times-new-roman-400-italic.eot\n  *\n  * Note that $styles 'normal' and 'italic' are also font-style keywords so they should not be passed as strings (i.e. in quotations).\n  * \n  * TO DO: Not happy with how this handles local names, which are specific and too idiosyncratic for an standardized treatment.\n  */\n  \n\n$weightmap: (100: 'Hairline',200: 'Thin',300: 'Light', 400: 'Regular', 500: 'Medium',600: 'Semibold',700: 'Bold',800: 'ExtraBold',900: 'Black')\n \n  \n=load_font($family,$basefilename,$weights: (400,700),$styles:(normal,italic),$local_suffixes:(normal: 'Regular',italic: 'Italic'),$weightlabels: $weightmap,$path: $font_path)\n\n  @each $weight in $weights \n    @each $style in $styles\n      \n      $directory: '#{$basefilename}-#{$weight}'\n      $filename: '#{$basefilename}-#{$style}-#{$weight}'\n      @font-face \n        font-display: swap\n        font-family: $family\n        font-style: $style\n        font-weight: $weight\n        @if map-has-key($local_suffixes, $style) != null\n          $suffix: map-get($local_suffixes,$style)\n          $weightlabel: map-get($weightlabels,$weight)\n          $localname: '#{$family} #{$weightlabel} #{$suffix}'\n          @if $weight == 400\n            $localname: '#{$family} #{$suffix}'\n          $altlocalname: str_replace($localname,' ','-')\n          src: local('#{$localname}'), local('#{$altlocalname}'), \n        src: url('#{$path}/#{$directory}/#{$filename}.eot'), url('#{$path}/#{$directory}/#{$filename}.eot?#iefix') format('embedded-opentype'), url('#{$path}/#{$directory}/#{$filename}.otf') format('opentype'), url('#{$path}/#{$directory}/#{$filename}.woff') format('woff'), url('#{$path}/#{$directory}/#{$filename}.woff') format('woff'), url('#{$path}/#{$directory}/#{$filename}.ttf') format('truetype'),url('#{$path}/#{$directory}/#{$filename}.svg#Calluna Sans') format('svg')","/**\n * @file\n * Typography Configuration. Used to define a standard proportion across the site as per the modularscale library.\n * \n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n \n$basetypesize: 1rem // Body font size relative to rootsize above. Establishes core unit for other font sizes (rem, em, px, etc.).\n\n// NOTE baseline height ($blh) is defined in the 10_layout core, tying leading together with general spacing.\n\n// Set size factors for type. Size factors are a funciton of $basetypesize, $scale and device-width determined $typesscale.\n\n$sizefactors: (base: 0, h1: 5, h2: 3, h3: 2, h4: 1, h5: 0, h6: 0)\n\n// Scale factor for type at each breakpoint. Set to 0 to keep size consistent.\n\n$typescale: (base: 0, xsml: 0, sml: 0, med:0, lrg: 0, xlrg: 0, xxlrg: 0)\n\n// Type faces are defined in 00_configuration folders, which get loaded before all other styles.\n\n// Default fonts. Use the font loader to load fonts.\n$extralight: 100\n$thin: 200\n$light: 300       // b, h\n$normal: 400      // b, h, a\n$medium: 500\n$semibold: 600    // a\n$bold: 700        // b, a\n$extrabold: 800   // h\n$heavy: 900\n\n+load_font('Aleo','aleo',($normal,$bold),(normal,italic))\n+load_font('Roboto','roboto',($light,$normal,$bold),(normal,italic))\n\n\n$basefont: Roboto, Helvetica, Arial sans-serif\n$headingfont: \"Aleo\", Georgia, Times, serif\n$altfont: $headingfont\n$labelfont: $basefont\n$codefont: Monaco, Courier New, monospace\n\n$font_path: '../fonts'\n\n// available base (b), heading (h) and alt (a) sizes listed\n\n// legacy\n\n$extralightfw: $extralight\n$thinfw: $thin\n$lightfw: $light       // b, h\n$normalfw: $normal      // b, h, a\n$mediumfw: $medium\n$semiboldfw: 600    // a\n$boldfw: $bold        // b, a\n$extraboldfw: $extrabold   // h\n$blackfw: $heavy\n\n// Headers\n\n$headingfw: $bold\n\n// Tables\n\n$row_text_color: $black\n$row_header_bg: set-color(2,'tint')\n$row_header_color: $black\n$row_border_color: $white\n$row_bg_color: set-color(2,'watermark')\n$row_zebra_stripe_color: set-color(2,'fade')\n$table_border_width: 4px\n\n// Aliases\n\n$h1fontsize: $basetypesize * map-get($sizefactors,'h1')\n$h2fontsize: $basetypesize * map-get($sizefactors,'h2')\n$h3fontsize: $basetypesize * map-get($sizefactors,'h3')\n$h4fontsize: $basetypesize * map-get($sizefactors,'h4')\n$h5fontsize: $basetypesize * map-get($sizefactors,'h5')\n$h6fontsize: $basetypesize * map-get($sizefactors,'h6')\n","/** \n *  @file _set_css_variables\n *  @component layout_css_variables\n *  @file _index.sass \n *  @description  Sets breakpoints and breakpoint aliases as CSS variables, making them available to Javascript */\n \n$rootvar: ':root' // See https://github.com/sass/libsass/issues/2511\n\n$em_factor: convert($rootsize,px)\n\n#{$rootvar}\n  @each $bp, $value in $breakpoints\n    @if unit($value) != 'px'\n      $value: strip_unit(convert($value,px,$em_factor))\n    --breakpoint-#{$bp}: #{$value}\n    \n  $stack: strip_unit(convert(map-get($breakpoints,$stack_breakpoint),px,$em_factor))\n  $tablet: strip_unit(convert(map-get($breakpoints,$tablet_breakpoint),px,$em_factor))\n  $desktop: strip_unit(convert(map-get($breakpoints,$desktop_breakpoint),px,$em_factor))\n  $ultrawide: strip_unit(convert(map-get($breakpoints,$ultrawide_breakpoint),px,$em_factor))\n  \n  --breakpoint-stack: #{$stack}\n  --breakpoint-tablet: #{$tablet}\n  --breakpoint-desktop: #{$desktop}\n  --breakpoint-ultrawide: #{$ultrawide}","// responsive by default\n\nimg\n  max-width: 100%\n  width: 100%\n  height: auto\n  border-width: 0\n  vertical-align: middle\n  -ms-interpolation-mode: bicubic","/* !BASIC STRUCTURE */\n\nhtml\n  scroll-behaviour: smooth\n\nhtml, body\n  height: 100%\n\nbody\n  padding: 0\n  margin: 0\n  background-color: $bgcolor\n   \n*\n  box-sizing: border-box","/**\n * @file\n * Colour System Configuration. A standardized approach to defining and modulating colour.\n * \n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n \n /* !COLOUR GRID\n    Define your design’s palette by choosing the main colours */\n\n$clr1: #00693e // Dartmouth Green\n$clr2: #9bc8eb // Dartmouth River Blue\n$clr3: #003c73 // Dartmouth Navy Blue\n$clr4: #9d162e // Dartmouth Bonfire Red\n$clr5: #ffa00f // Dartmouth Bonfire Orange\n\n\n// Define alternative blackpoint, whitepoint and neutrals.\n\n$black: #232526 // DDHI Black\n$white: #FFFFFF\n$true_black: #000000\n\n\n// Color map examples\n\n$clr1_map: (dark: mix($black,$clr1,30%),  shade: mix($black,$clr1,20%), primary: $clr1, tint: mix($white,$clr1,20%), fade: mix($white,$clr1,70%), watermark: mix($white,$clr1,90%))\n$clr2_map: (dark: mix($black,$clr1,30%), shade: mix($black,$clr2,20%), primary: $clr2, tint: mix($white,$clr2,20%), fade: mix($white,$clr2,70%), watermark: mix($white,$clr2,90%))\n$clr3_map: (dark: mix($black,$clr1,30%), shade: mix($black,$clr3,20%), primary: $clr3, tint: mix($white,$clr3,20%), fade: mix($white,$clr3,70%), watermark: mix($white,$clr3,90%))\n$clr4_map: (dark: mix($black,$clr1,30%), shade: mix($black,$clr4,20%), primary: $clr4, tint: mix($white,$clr4,20%), fade: mix($white,$clr4,70%), watermark: mix($white,$clr4,90%))\n$clr5_map: (dark: mix($black,$clr1,30%), shade: mix($black,$clr5,20%), primary: $clr5, tint: mix($white,$clr5,20%), fade: mix($white,$clr5,70%), watermark: mix($white,$clr5,90%))\n\n\n// Neutrals\n// neutral() function mixes blackpoint and whitepoint.\n\n$lightest_neutral: neutral(5)\n$lighter_neutral: neutral(30)\n$light_neutral: neutral(40)\n$neutral: neutral()\n$mid_neutral: neutral(60)\n$dark_neutral: neutral(70)\n$darker_neutral: neutral(80)\n$darkest_neutral: neutral(90)\n\n// Background\n\n$bgcolor: $white\n$bgcolor2: neutral(5)\n$bgcolor3: neutral(5)\n$bgcolor4: neutral(5)\n$bgcolor5: neutral(5)\n$bgcolor6: neutral(5)\n\n\n\n// Aliases\n\n$impact: $clr4\n$cta: set-color(4,'dark')\n$de_emphasized: $light_neutral\n$de_activated: $lighter_neutral\n$link_colour: $black\n\n// !LOCAL\n\n// Gradients\n\n$dark_interior: darken(set-color(4,'dark'),20%)\n\n$ltr_dark_gradient: linear-gradient(270deg, rgba($black, 0.92) 36%, rgba($dark_interior,0.7) 100%)\n$rtl_dark_gradient: linear-gradient(90deg, rgba($black, 0.92) 36%, rgba($dark_interior,0.7) 100%)\n$home_rtl_dark_gradient: linear-gradient(90deg, rgba($dark_interior, 0.8) 36%, rgba($clr1,0.1) 100%)\n$mirror_gradient: linear-gradient(90deg, rgba($true_black,1) 0%, rgba($true_black,.5) 15%, rgba(159,159,159,0) 50%, rgba($true_black,.5) 85%, rgba($true_black,1) 100%)\n$mirror_gradient_green: linear-gradient(90deg, rgba($true_black,1) 0%, rgba($clr1,50%) 50%, rgba($true_black,1) 100%)\n\n\n\n","/* MOBILE */\n\n#mobile-header-nav\n  display: block\n  \n  +bp(med)\n    display: none\n    \n#mobile-nav-block\n  display: none","// Breakpoints for Media Queries ------------------------------\n\n=bp($point)\n\n  @if $point == xxsml\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xsml') - 5em)\n      @content\n\n  @else if $point == xsml\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xsml'))\n      @content\n\n  @else if $point == sml\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'sml'))\n      @content\n\n  @else if $point == med\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'med'))\n      @content\n\n  @else if $point == lrg\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'lrg'))\n      @content\n\n  @else if $point == xlrg\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xlrg'))\n      @content\n\n  @else if $point == xxlrg\n    @media only #{$media_type} and ($feature: map-get($breakpoints,'xxlrg'))\n      @content","/** \n *  @file colour_root_variables.sass \n *  @category 20_colour\n *  @component _root_colour_variables\n *  @description Adds CSS variables to be passed to javascript */\n\n$rootvar: ':root' // See https://github.com/sass/libsass/issues/2511\n\n$colours: $clr1 $clr2 $clr3 $clr4 $clr5 $clr6 $clr7 $clr8  $clr9\n\n@for $i from 1 through 9\n  #{$rootvar}\n    $colour: nth($colours,$i)\n    --colour--#{$i}: #{$colour}\n    \n\n$colour_maps: $clr1_map $clr2_map $clr3_map $clr4_map $clr5_map $clr6_map $clr7_map $clr8_map $clr9_map\n$colour_grid_keys: 'shade','primary','tint','fade','watermark'\n\n@for $i from 1 through 9\n  $map: nth($colour_maps,$i)\n  @each $key in $colour_grid_keys\n    #{$rootvar}\n      $value: map-get($map,$key)\n      --colour--#{$i}--#{$key}: #{$value}\n      \n      \n#{$rootvar}\n  --colour--black: #{$black}\n  --colour--white: #{$white}\n  --colour--impact: #{$impact}\n  --colour--cta: #{$cta}\n  \n  \n@for $i from 1 through 9\n  $key: $i * 10\n  $neutral: neutral($key)\n  #{$rootvar}\n    --colour--neutral--#{$key}: #{$neutral}\n","// Defines the base type scale system.\n\nhtml\n  font-family: $basefont\n  font-size: ms(map-get($typescale,'base'),$rootsize,$scale)\n  color: $black\n  \n  +bp(xsml)\n    font-size: ms(map-get($typescale,'xsml'),$rootsize,$scale)\n  \n  +bp(sml)\n    font-size: ms(map-get($typescale,'sml'),$rootsize,$scale)\n    \n  +bp(med)\n    font-size: ms(map-get($typescale,'med'),$rootsize,$scale)\n    \n  +bp(lrg)\n    font-size: ms(map-get($typescale,'lrg'),$rootsize,$scale)\n    \n  +bp(xlrg)\n    font-size: ms(map-get($typescale,'xlrg'),$rootsize,$scale)\n\n  +bp(xxlrg)\n    font-size: ms(map-get($typescale,'xxlrg'),$rootsize,$scale)\n      \nbody\n  font-size: $basetypesize\n  +standard-line-height()\n","// Revised line-height mechanism. Line-heights are already proportional to the text size. \n// @todo: Must investigate further the relationship between rv(0) and line-height: 1 so that we can\n// match rv() values to exact line-heights for measuring.\n \n// +line-height() returns a relative value of the provided factor against the standard $scale.\n\n=line-height($value: 1)\n  line-height: $value\n  \n// +set-line-height() returns a relative value and lets you provide a $scale\n  \n=set-line-height($value: 0,$ratio: $scale)\n  +line-height($value,$ratio)\n  \n// The standard line height is set in the $line_heights sass-map, returning the 'base' key value by default.\n  \n=standard-line-height($key: 'base')\n  line-height: map-get($line_heights,$key)\n\n// Single-line height is a fixed value of 1\n  \n=single-line-height()\n  +line-height()","p, ol, ul, th, td, dl, dd, dt, address\n  +font-size(map-get($sizefactors,'base'))\n  +standard-line-height()\n  +standardized-block-spacing($block_spacing - 3)\n  \n  \nblockquote\n  box-sizing: border-box\n\ndl\n  margin-bottom: rv(0)\n  \ndt\n  font-family: $headingfont\n  font-weight: $boldfw\n  text-transform: uppercase\n  \ndd\n  margin-bottom: rv(-1)\n  margin-left: 0\n      \nmenu, dir\n  margin: 0\n  padding: 0\n\nq\n  quotes: none\n\nabbr[title]\n  border-bottom: 1px dotted $dark_neutral\n  cursor: help\n\nb, strong, .strong\n  font-weight: $semiboldfw\n\ndfn, .italic\n  font-style: italic\n\nins\n  background-color: $light_neutral\n  color: $black\n  text-decoration: none\n\nmark\n  background-color:  $light_neutral\n  color: $black\n  font-style: italic\n  font-weight: $boldfw\n\npre, code, kbd, samp\n  font-family: $codefont\n  +font-size(0)\n  +line-height(0)\n  color: $darker_neutral\n\npre\n  white-space: pre\n  white-space: pre-wrap\n  word-wrap: break-word\n\nsub, sup\n  position: relative\n  +font-size(-1)\n  line-height: 0\n  vertical-align: baselineheight\n\nsup\n  top: ms(-2,$basetypesize,$scale) * -0.5\n  \nsub\n  bottom: ms(-2,$basetypesize,$scale) * -0.25\n\n.spaced\n  letter-spacing: 1px\n \nhr\n  border: 0\n  border-bottom: 1px solid $dark_neutral\n  +standardized_block_spacing()\n\n","/**\n * @file _font_size.sass\n * @category 20_typography\n * @group a_components\n * @description Creates a font-size declaration based on relative value $factor, $basetypesize and $scale.\n *\n */\n\n=font-size($factor: 0,$ratio: $scale)\n  font-size: font-value($factor,$ratio)\n  \n// Set notation\n\n=set-font-size($factor: 0,$ratio: $scale)\n  +font-size($factor,$ratio)\n  \n// Unscaled font-size\n\n=base-font-size()\n  font-size: $basetypesize\n  \n// Alias of above\n  \n=base-type-size()\n  +base-font-size()","/**\n *  @file Block Spacing Mixin\n *  @group 10_layout\n *  @description Sets a standardized space for stacked content blocks.\n * \n */\n\n=standardized-block-spacing($desktop_spacing: $block_spacing,$mobile_spacing: $mobile_block_spacing)\n  margin-top: 0\n  margin-bottom: rv($mobile_spacing)\n  \n  +bp($stack_breakpoint)\n    margin-bottom: rv($desktop_spacing)","// HEADINGS ------------------------------\n\nh1, h2, h3, h4, h5, h6\n  margin: 0\n  color: $black\n  font-family: $headingfont\n  font-weight: $headingfw\n  box-sizing: border-box\n  +single-line-height()\n  \n  > a\n    color: $black\n    text-decoration: none\n  \nh1,h2,h3\n  width: 100%\n\nh1, .h1\n  +font-size(map-get($sizefactors,'h1'))\n  line-height: map-get($line_heights,'h1')\n  margin-top: rv(1)\n  margin-bottom: rv(0)\n  \nh2, .h2\n  +font-size(map-get($sizefactors,'h2'))\n  line-height: map-get($line_heights,'h2')\n  margin-top: rv(1)\n  margin-bottom: rv(-1)\n\nh3, .h3, %h3\n  +font-size(map-get($sizefactors,'h3'))\n  line-height: map-get($line_heights,'h3')\n  margin-top: rv(1)\n  margin-bottom: 0\n  text-transform: uppercase\n\nh4, .h4\n  +font-size(map-get($sizefactors,'h4'))\n  line-height: map-get($line_heights,'h4')\n  margin-top: rv(1)\n  margin-bottom: 0\n  \nh5, .h5\n  +font-size(map-get($sizefactors,'h5'))\n  line-height: map-get($line_heights,'h5')\n  margin-top: rv(0)\n  font-weight: $normalfw\n  font-style: italic\n  margin-bottom: 0\n  \nh6, .h6\n  +font-size(map-get($sizefactors,'h6'))\n  line-height: map-get($line_heights,'h6')\n  margin-top: rv(0)\n  margin-bottom: 0\n  font-weight: $normalfw\n  color: neutral(80)","a\n  color: $link_colour\n  cursor: pointer\n  text-decoration: none\n  +transition(all,-6)\n  \n  &:hover, &:active\n    +link-underline()\n    \n// Default for links in body paragraphs.\n    \nmain\n  p > a\n   a\n    +inline-text-link()","/* \n   @file _standard_transition.sass \n   @category 50_animation\n   @group a_components\n   @description  Creates a standard transition property based on configuration values. */\n\n=transition($properties: all,$timing: 0, $delay: $base_delay, $easing: $standard_easing)\n\n  $transitions: ()\n  \n  @each $property in $properties\n    $transition: $property rd($timing) $easing rd($delay)\n    $transitions: append($transitions,$transition,comma)\n      \n  transition: $transitions\n\n// Legacy\n\n=standard-transition($properties: all,$timing: 0, $delay: $base_delay, $easing: $standard_easing)\n  +transition($properties,$timing,$delay,$easing)\n","/**\n *  @file _link_underline.sass \n *  @category 30_typography\n *  @component 00_Core\n *  @description  Adds an underline. Allows themes to override with by redefining it, e.g. to add a text-underline to border-bottom approach */\n \n=link-underline()\n  border-bottom: 1px solid $link_colour\n","/**\n *  @file _inline_text_link.sass \n *  @category 30_typography\n *  @component 00_Core\n *  @description  Anchor tags tend to come in two varieties, one that's used for menus and one \n *  that's used for inline text. Inline text tends to occur within paragraphs, following a \n *  p > a selector logic (or main p > a). There are circumstances, however, that require anchor \n *  consistency with inline body text links. This mixin allows you to apply this logic wherever \n * relevant. It's important to override this mixin locally if you want to maintain consistency. */\n \n=inline-text-link()\n  color: $link_colour\n  cursor: pointer\n  text-decoration: none\n  +transition(all,-5)\n  +link-underline()\n  \n  &:hover, &:active\n    border-bottom-color: $black\n  \n","ol, ul\n  margin-top: rv(-1)\n  margin-bottom: rv(-1)\n    \nli ul, li ol\n  margin-top: rv(0)\n  margin-bottom: rv(0)\n","p > a, p li > a, blockquote > a\n  color: $link_colour\n  +link-underline()\n  \n  &:hover, &:active\n    color: mix($link_colour,$black,10%)","/*\n * @file _form_elements\n * @component ui_element_base\n * Defines a common set of rules for form elements.\n * Overrides browser default form element styling.\n * Values are set in the configuration file.\n */    \n \n\n\n// See usage in form element base.\n \n$ui_form_mobile_clearance: rv($mobile_edge_padding_factor)\n$ui_form_clearance: rv($edge_padding_factor)\n\n \n%form-element-hover \n  &:hover, &:focus, &:active\n    text-decoration: none\n    border-color: $ui_hover_border_color\n    box-shadow: inset 0 0 0 $ui_border_width $ui_hover_border_color\n    +transition()\n\n%form-element-base\n  display: flex\n  flex-direction: row\n  justify-content: flex-start\n  align-items: center\n  vertical-align: baseline\n  box-sizing: border-box\n  zoom: 1\n  font-family: $ui_font_family\n  padding: rv($ui_padding)\n  +font-size($ui_font_size)\n  line-height: $blh\n  font-weight: $normalfw\n  vertical-align: middle\n  border-style: solid\n  border-width: $ui_border_width\n  border-color: $ui_border_color\n  border-radius: $ui_border_radius\n  background-clip: border-box\n  box-shadow: none\n  outline: none\n  +transition()\n  +ui-element-width-control()\n  \n  @extend %form-element-hover\n      \n%text-element-base\n  @extend %form-element-base\n  appearance: none\n\n  @if $ui_element_height != auto\n    height: $ui_element_height\n    min-height: $ui_element_height\n    \n%textarea-base\n  box-sizing: border-box\n  max-width: 100%\n  padding: rv($ui_padding)\n  box-shadow: none\n  border-style: solid\n  border-width: $ui_border_width\n  border-color: $ui_border_color\n  border-radius: $ui_border_radius\n  background-clip: border-box\n  +transition()\n  +ui-element-width-control()\n  \n%select-element-base\n  @extend %text-element-base\n    \n/*\n * A note on element height\n * Button base styling includes a logic intended to enforce consistent height between form inputs and buttons.\n * This is particularly important for inline forms, where select, input and submit buttons must be consistent.\n * \n * The best approach is to enforce a $ui_element_height, and ensure that it's larger than the default button height.\n * The fallback is a logic which takes into account ui elements border widths in the instances where text input\n * has borders and buttons do not.\n *\n */    \n\n$btnPadding: ms($btn_padding,$blh,$scale)\n$btnBorderAllowance: $ui_border_width\n\n%form-description\n  +font-size(-1)\n  color: $dark_neutral\n\n%btn-base\n  @extend %form-element-base\n  \n  @if $ui_element_height != auto\n    height: $ui_element_height\n    flex-shrink: 0\n      \n  @if $buttonfontsize != $ui_font_size\n    +font-size($buttonfontsize)\n    \n  @if $btn_border_width != $ui_border_width\n    border-width: $btn_border_width\n    padding: calc(#{$btnPadding} + #{$btnBorderAllowance}) $btnPadding \n  @else\n    @if $btn_padding != $ui_padding\n      padding: rv($ui_padding)\n    \n  @if $btn_border_color != $ui_border_color\n    border-color: $btn_border_color\n    \n  @if $btn_border_radius != $ui_border_radius\n    border-radius: $btn_border_radius\n  \n  -webkit-appearance: none\n  justify-content: center\n  text-align: center\n  background-clip: border-box\n  cursor: pointer\n  min-width: $btn_min_width\n  width: $btn_width\n  max-width: $btn_max_width\n  +transition()\n  white-space: nowrap\n\n  &:hover, &:focus, &:active\n    text-decoration: none\n    box-shadow: none\n    +transition(all,-5)\n        \n%btn\n  @extend %btn-base\n  color: $btn_color\n  background-color: $btn_bg_color\n  border: $btn_border_width solid $btn_border_color\n  &:hover, &:focus, &:active\n    background-color: $btn_hover_bg_color\n    color: $btn_hover_color\n    border: $btn_border_width solid $btn_hover_border_color\n    \n%btn-submit\n  @extend %btn-base\n  color: $btn_submit_color\n  background-color: $btn_submit_bg_color\n  border: $btn_border_width solid $btn_submit_border_color\n  &:hover, &:focus, &:active\n    background-color: $btn_submit_hover_bg_color\n    color: $btn_submit_hover_color\n    border: $btn_border_width solid $btn_submit_hover_border_color\n\n%btn-reset\n  @extend %btn-base\n  color: $dark_neutral\n  background-color: $white\n  border: $btn_border_width solid $dark_neutral\n  &:hover, &:focus, &:active\n    background-color: $dark_neutral\n    color: $btn_hover_color  \n    \n%btn-inverted\n  @extend %btn-base\n  color: $btn_bg_color\n  background-color: $btn_color\n  border: $btn_border_width solid $btn_bg_color\n  &:hover, &:focus, &:active\n    background-color: $btn_hover_color\n    color: $btn_color\n    \n%btn-outline    \n  @extend %btn-base\n  color: $outline_btn_color\n  background-color: transparent\n  \n  @if $btn_border_width == 0\n    border: 1px solid $outline_btn_color\n  @else\n    border: $btn_border_width solid $outline_btn_color\n    \n  &:hover, &:focus, &:active\n    color: $outline_btn_hover_color\n    background-color: transparent\n    @if $btn_border_width == 0\n      border: 1px solid $outline_btn_hover_color\n    @else\n      border: $btn_border_width solid $outline_btn_hover_color\n\n%btn-ghost\n  @extend %btn-base\n  color: $white\n  background-color: transparent\n  \n  @if $btn_border_width == 0\n    border: 1px solid $white\n  @else\n    border: $btn_border_width solid $white\n    \n  &:hover, &:focus, &:active\n    @if $btn_border_width == 0\n      border: 1px solid $white\n    @else\n      border: $btn_border_width solid $white\n    background-color: darken($btn_hover_color,5%)\n    color: $white\n    \n\n// An alias\n    \n%button\n  @extend %btn\n    \n\n      ","/**\n * @file\n * Layout Configuration. Set a modular scale and standardized spacing. Define breakpoints.\n * \n * Copy this file to your theme configuration folder of your local theme or component and adjust its _index file to import.\n */\n \n@use 'sass:math'\n\n$rootsize: 100%    // Assigned to HTML element. 100% = 16px. Referenced as 1rem.\n$blh: 1.7rem  // Base size unit in rem (relative to the HTML root size).\n$scale: 1.25 // Sets an size interval mapped over integers. See https://www.modularscale.com for a demonstration.\n\n$max_width: 1450px\n$legible_inset_width: 700px\n\n$masthead_height: rv(2) // Mobile\n$masthead_width: rv(5) // Desktop\n$footer_height: 100px\n$admin_bar_height: 50px\n$navborder: rv(-3) // Border on the navigtaion bar\n$navblock_width: rv(13) // Flyout menu with\n\n\n\n$ddhi_logo_height: $masthead_width // see 10_layout/_header.sass in this group\n\n$proportional_width_unit: math.div((100% - math.div(100,$scale)),2)\n\n$standard_sidebar_width: $proportional_width_unit\n$right_sidebar_width: $standard_sidebar_width * 3\n$left_sidebar_width: $standard_sidebar_width\n\n$grid_gap_factor: 3\n\n$splash_area_desktop_min_height: 650px\n\n// Block spacing is a reference variable (in relative value) that determines the spacing between items in a layout.\n// Typically used for vertical spacing (e.g. between stacked content boxes).\n\n// Edge padding is similar, defining the horizontal padding on content boxes. Used to ensure\n// that content doesn't collapse right to the edge of the viewport. Setting\n// these identically will create spacing consistency.\n\n// Mobile spacing tends to be tighter than desktop views.\n\n// Note: Functions using these values should anticipate null values to indicate “zero” (as opposed to a value\n// of “0”, which is an integer on the relative scale).\n\n$block_spacing: 4\n$mobile_block_spacing: 0\n\n$edge_padding_factor: 2\n$mobile_edge_padding_factor: $mobile_block_spacing\n\n\n// Keeps consistency on block borders\n\n$standard_block_separator: 1px solid neutral(30)\n\n// Title Area\n\n$title_group_top_edge: rv($edge_padding_factor)\n$title_area_outside_padding: rv(5)\n$title_area_inside_padding: rv(5)\n$title_area_bottom_padding: rv(5)\n\n$title_area_height: calc(100vh - #{$ddhi_logo_height} - #{$title_group_top_edge} * 2)  // 100% less the top and bottom edge padding, logo height, and nav border\n$title_area_height_admin: calc(100vh - #{$ddhi_logo_height} - #{$admin_bar_height} -  #{$title_group_top_edge} * 2) // Factors in Drupal admin toolbar if it exists\n\n// Standardized breakpoint for moving from desktop layouts to stacked layouts\n\n$stack_breakpoint: 'sml'\n$tablet_breakpoint: 'med'\n$desktop_breakpoint: 'lrg'\n$ultrawide_breakpoint: 'xlrg'\n\n// Less wordy aliases. Keep the others for backwards compatibility.\n\n$stack: $stack_breakpoint\n$tablet: $tablet_breakpoint\n$desktop: $desktop_breakpoint\n$ultrawide: $ultrawide_breakpoint\n\n/* !BREAKPOINTS */\n\n    \n/*  Values for your responsive design breakpoints. This has now been rethought \n    thanks to https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.rduwqht4g\n  \n  336px \t  21em       xsml\n  600px \t  37.5em     sml\n  900px \t  46.25      med\n  1200px    75em       lrg\n  1800px\t  100em      xlrg   */\n  \n$media_type: screen\n$feature: min-width\n  \n$breakpoints: (xsml: 21em, sml: 46.25em, med: 56.25em, lrg: 75em, xlrg: 112.5em, xxlrg: 130em)\n\n/* Modular scale reference\n\n  double-octave    : 4                 \n  pi               : 3.14159265359     \n  major-twelfth    : 3                 \n  major-eleventh   : 2.666666667       \n  major-tenth      : 2.5               \n  octave           : 2                 \n  major-seventh    : 1.875             \n  minor-seventh    : 1.777777778       \n  major-sixth      : 1.666666667       \n  phi              : 1.618034          \n  golden           : $phi              \n  minor-sixth      : 1.6               \n  fifth            : 1.5               \n  augmented-fourth : 1.41421           \n  fourth           : 1.333333333       \n  major-third      : 1.25              \n  minor-third      : 1.2               \n  major-second     : 1.125             \n  minor-second     : 1.066666667       */","/**\n * @file\n * UI Configuration. A standardized approach to defining buttons and other ui elements.\n * \n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n  \n$ui_element_height: 50px  // Standard height for single-line input, select and button elements.\n$ui_border_radius: 0\n$ui_border_width: 1px\n$ui_border_color: $light_neutral\n$ui_hover_border_color: $link_colour\n$ui_font_family: $basefont\n$ui_color: $darker_neutral  // Default for icons and text-based interactive components.\n\n$ui_padding: -4  // Size factor\n$ui_font_size: 0 // Size factor\n\n$border_radius: $ui_border_radius\n\n// Buttons\n\n$buttonfontsize: 0\n\n$btn_padding: $ui_padding\n$btn_border_width: $ui_border_width\n$btn_border_radius: $ui_border_radius\n$btn_min_width: 200px\n$btn_width: 320px \n$btn_max_width: 410px\n\n$btn_color: $cta\n$btn_bg_color: transparent\n$btn_border_color: $cta\n$btn_hover_color: set-color(4)\n$btn_hover_border_color: set-color(4)\n$btn_hover_bg_color: $white\n\n$btn_submit_color: $white\n$btn_submit_bg_color: $black\n$btn_submit_border_color: $black\n$btn_submit_hover_color: $white\n$btn_submit_hover_border_color: $clr4\n$btn_submit_hover_bg_color: $clr4\n\n$outline_btn_color: $mid_neutral\n$outline_btn_hover_color: $ui_hover_border_color\n","/*\n * @file _ui_patterns\n * @component ui_element_base\n * A place for helpful UI-oriented mixins.\n */    \n \n\n\n// See usage in form element base.\n \n$ui_form_mobile_clearance: rv($mobile_edge_padding_factor)\n$ui_form_clearance: rv($edge_padding_factor)\n\n=ui-element-width-control()\n  max-width: calc(100vw - #{$ui_form_mobile_clearance} * 2) // Form elements can only be as wide as the viewport less the edge padding.\n  \n  +bp($stack)\n    max-width: calc(100vw - #{$ui_form_clearance} * 2)    \n\n      ","/*\n * Defines a common set of rules for form elements.\n * Definitions are set in a_core/10_Definitions/_forms.sass\n */    \n\n// .trigger is a Drupal class for contextual menus.\n\nform\n +ui-element-width-control()\n\ninput\n  &[type='button']\n    @extend %btn\n\n  &[type='submit']\n    @extend %btn-submit\n    margin-top: rv(0)\n  \n  &[type='reset']\n    @extend %btn-reset\n    \n  &[type='text']\n    @extend %text-element-base\n    \n  &[type='search']\n    @extend %text-element-base    \n  \n  &[type='url'], &[type='date'], &[type='email'], &[type='password']\n    @extend %text-element-base\n    \nselect\n  @extend %select-element-base\n  \ntextarea\n  @extend %textarea-base\n  \n  @extend %form-element-hover\n\n.form-item\n  margin-top: rv(0)\n\n","/** \n *  @file _animation_root_variables.sass \n *  @category 50_animation\n *  @component standardized_animation\n *  @description Adds CSS variables to be passed to javascript */\n\n$rootvar: ':root' // See https://github.com/sass/libsass/issues/2511\n\n$heartbeat_seconds: ceil(strip_unit($heartbeat)) * 1000\n$slide_transition_seconds: ceil(strip_unit($slide_transition)) * 1000\n\n#{$rootvar}\n  --animation--heartbeat: #{$heartbeat_seconds}\n  --animation--slidetransition: #{$slide_transition_seconds}","figure\n  margin: 0\n  box-sizing: border-box\n  \nfigcaption\n  display: block\n  box-sizing: border-box\n  font-weight: normal\n  +font-size(0)\n  font-style: italic\n  color: $black","// Important when using SVG Symbols\n// The core svg fill should be set to “inherit”, which should apply to all predefined svg <symbols>.\n// This allows symbols referenced through a <use> tag to inherit colour from their context,\n// putting them into the scope of the css. Otherwise they are simply references and exist outside\n// the DOM.\n\n\nsvg\n  width: inherit\n  height: inherit\n  fill: inherit\n  \n  // Standard Adobe Illustrator SVG classes\n  \n  .cls-1, .cls-2, .cls-3\n    fill: inherit","/**\n * @file _fluid_type_component.sass\n * \n */\n\n\n@if $universal_fluid_type == true\n  $basetypesize: 1em\n  \n  body\n    +fluid_type($min_font_size,$max_font_size,$min_viewwidth,$max_viewwidth)\n          \n.fluid-type\n  +fluid_type($min_font_size,$max_font_size,$min_viewwidth,$max_viewwidth)","/* Scales typography for any screen size. h/t https://www.madebymike.com.au/writing/precise-control-responsive-typography/\n  and Indrek Paas https://www.sassmeister.com/gist/7f22e44ace49b5124eec\n  \n  @var\n  $min_size: Minimum font size in em or rem\n  $max_size: Maximum font size in em or rem\n  $min_viewport_width: Sets the lower bound breakpoint to stop scaling. E.g. map-get($breakpoints,'med') */\n  \n$default_min_width: map-get($breakpoints,$stack_breakpoint)\n\n=fluid-type($min_value: $min_font_size, $max_value: $max_font_size,$min-vw: $min_viewwidth, $max-vw: $max_viewwidth, $properties: font-size)\n\n  // Assume that passed integers are relative font size values\n\n  @if is_integer($min_value) and unit($min_value) == ''\n    $min_value: font-value($min_value)\n\n  @if is_integer($max_value) and unit($max_value) == ''\n    $max_value: font-value($max_value)\n    \n  $break: false\n\n  // Capture compatibility errors\n  \n  @if comparable($min_value,$max_value) == false\n    $minfunit: unit($min_value)\n    $maxfunit: unit($max_value)\n    @warn \"Fluid type: Minimum and maximum font size units are not compatible (#{$minfunit} and #{$maxfunit}\"\n    $break: true\n    \n  @if comparable($min_viewwidth,$max_viewwidth) == false\n    $minvunit: unit($min_viewwidth)\n    $maxvunit: unit($max_viewwidth)\n    @warn \"Fluid type: Minimum and maximum view units are not compatible (#{$minvunit} and #{$maxvunit}\"\n    $break: true\n  \n  @if $break == false\n\n    @each $property in $properties\n      #{$property}: $min_value\n  \n    @media (min-width: $min-vw)\n      $sizefactor: strip-unit($max_value - $min_value)\n      $viewfactor: strip-unit($max-vw - $min-vw)\n    \n      @each $property in $properties\n        #{$property}: calc(#{$min_value} + #{$sizefactor} * (100vw - #{$min-vw}) / #{$viewfactor})\n  \n    @media (min-width: $max-vw)\n      @each $property in $properties\n        #{$property}: $max_value\n        \n    // Container elements must be set to an em value to properly cascade fluid type\n        \n    address, article, aside, section, ul\n      font-size: 1em\n      line-height: inherit\n","/**\n * @file\n * Fluid Type Component Configuration.\n * \n * Copy this file to your theme configuration folder of your local theme or component and adjust it _index file to import.\n */\n\n$universal_fluid_type: false  // Assign fluid type at the root level.\n\n$min_font_size: rv(0,$basetypesize)             // Lower bound for type scaling on <body> element. \n$max_font_size: rv(1,$basetypesize)             // Upper bound for type scaling on body element.\n$min_viewwidth: map-get($breakpoints,'sml')\n$max_viewwidth: map-get($breakpoints,'xlrg')","body\n  &.dark\n    background: $black\n    color: $white\n    h1, h2, h3, h4, h5, h6\n      color: $white\n    h1>a, h2>a, h3>a, h4>a, h5>a, h6>a \n      color: $white\n    #secondary-content\n      background: neutral(85)\n    .site-guide-cont i\n      background: $white\n    .resource-list .item>a\n      filter: unset\n    select\n      background: none\n      color: $white\n    .cards\n      background-color: neutral(5)\n    main \n      th  \n        background: neutral(85)\n    main \n      tr:nth-child(2n)>td\n        background: neutral(95)\n    .card \n      figure\n        filter: drop-shadow(rv(-2) rv(-2) rv(-2) neutral(50))\n    .btn\n      color: $white\n      border-color: $white\n      &:hover\n        background-color: $black\n    .browse-controls \n      .advanced-search\n        color: $white\n    a\n      color: $white\n    #homepage-splash \n      .resource.introduction \n        .introductory-text\n          background-color: $black\n    option\n      color: $black\n      \n    #advanced-search\n      .value \n        input\n          background: inherit\n          color: $white\n    .remove-value\n      color: $white\n      &:hover\n        background: unset\n        \n    #homepage-featured-profiles \n      figure\n        filter: drop-shadow(rv(-2) rv(-2) rv(-2) neutral(50))\n    #feature-tier-3\n      background: $black\n    #feature-tier-1\n      background: $black\n    #homepage-splash \n      .down-arrow \n        span\n          color: $white\n  \n.dark-switch \n  position: relative\n  display: inline-block\n  width: 40px\n  height: 24px\n\n.dark-switch input \n  opacity: 0\n  width: 0\n  height: 0\n\n.slider \n  position: absolute\n  cursor: pointer\n  top: 0\n  left: 0\n  right: 0\n  bottom: 0\n  background-color: #ccc\n  -webkit-transition: .4s\n  transition: .4s\n\n.slider:before \n  position: absolute\n  content: \"\"\n  height: 16px\n  width: 16px\n  left: 4px\n  bottom: 4px\n  background-color: white\n  -webkit-transition: .4s\n  transition: .4s\n\ninput:checked + .slider \n  background-color: $clr1\n\ninput:focus + .slider \n  box-shadow: 0 0 1px $clr1\n\ninput:checked + .slider:before \n  -webkit-transform: translateX(16px)\n  -ms-transform: translateX(16px)\n  transform: translateX(16px)  \n  \n// Timeline Darkmode Support\n  \n.tl-timenav\n  background-color: $black!important\n.tl-timeaxis-background\n  background: neutral(90)!important\n  border-color: $black!important\n.tl-timeaxis-tick\n  &:before\n    border-color: $white!important\n.tl-timeaxis-tick-text\n  color: $white!important\n.tl-slide \n  &.tl-slide-titleslide\n    background: $white\n.tl-attribution\n  background-color: neutral(85)\n\n","/**\n * @file\n * Styles for system messages.\n * Work in progress. Working from Classy theme message styles.\n */\n\n.messages\n  border: none\n  border-radius: 0\n  padding: rv(-1)\n  box-shadow: none\n  background-image: none\n  margin-top: rv(0)\n  margin-bottom: rv(0)\n\n  &:before\n    margin-right: rv(-2)\n  \n\n  & + .messages \n    margin-top: rv(0)\n  \n\n  .messages__item + .messages__item \n    margin-top: rv(-1)\n  \n\n  &--status\n    background-color: #e0eedb\n    color: #5c604e\n    &:before\n      @include material-icons\n      content: \"check_circle\"\n      color: rgb(129, 205, 187)\n    \n  \n\n  &--warning\n    background-color: rgba(255, 241, 98, 0.39)\n    color: #66624c\n    &:before\n      @include material-icons\n      content: \"warning\"\n      color: #ff6481\n    \n  \n\n  &--error\n    background-color: lighten($impact,30%)\n    color: $impact\n    &:before\n      @include material-icons\n      content: \"error\"\n      color: $impact\n    \n  \n\n\n","// Google’s Material Design Icons\n\n@mixin material-icons\n  color: rgba(0, 0, 0, 0.54)\n  font-family: 'Material Icons'\n  font-weight: normal\n  font-style: normal\n  font-size: 24px  /* Preferred icon size */\n  display: inline-block\n  width: 1em\n  height: 1em\n  line-height: 1\n  text-transform: none\n  letter-spacing: normal\n  word-wrap: normal\n  white-space: nowrap\n  direction: ltr\n  vertical-align: bottom\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility\n\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale\n\n  /* Support for IE. */\n  font-feature-settings: 'liga'\n","/**  \n *  @file _index.sass \n *  @category 30_typography\n *  @component callout_blocks\n *  @description Creates a floating “callout” to the left or right of the main text. The callout can be\n *  floating off of the main column (default), or inset into the text (use callout-inset() as an alias)\n *  Requires two sibling elements – .callout--main and .callout--text. See snippet.html\n *\n *  NOTE: The legacy version has no class names. It uses the first and second child of the main container.\n *  This was modified in case more precise control was needed */ \n \n\n// @args $direction: 'left' or 'right'\n// @args $shift: Integer as relative value indicating the callout's horizontal shift.\n// @args $width of the callout column. Can be a percentage of the container.\n// @args $inset. Integer as relative value indicating the inset of the callout. Set to null for no inset.\n// @args $breakpoint. The callout breakpoint, below which the callout stacks in its DOM order.\n  \n=callout($direction: 'left',$shift: $callout_shift, $callout_width: $callout_width, $inset: $callout_inset, $breakpoint: $callout_breakpoint)\n    \n  .callout--main  // Main\n    +callout-main()\n\n  .callout--text\n    +callout-side($direction,$shift, $callout_width, $inset, $breakpoint)\n\n            \n=callout-left($shift: $callout_shift, $callout_width: $callout_width, $inset: $callout_inset, $breakpoint: $callout_breakpoint)\n  +callout('left',$shift, $callout_width, $inset, $breakpoint)\n  \n=callout-right($shift: 3, $callout_width: $callout_width, $inset: $callout_inset, $breakpoint: $callout_breakpoint)\n  +callout('right',$shift, $callout_width, $inset, $breakpoint)\n  \n  \n=callout-main()\n  width: 100%  \n  \n=callout-side($direction: 'left',$shift: $callout_shift, $callout_width: $callout_width, $inset: $callout_inset, $breakpoint: $callout_breakpoint)\n  --callout-width: #{$callout_width}\n  \n  $shiftval: rv($shift)\n  \n  @if $inset == null\n    padding: 0 rv($shift)\n    margin: 0 // set locally\n    \n  +bp($breakpoint)    \n    position: relative\n    width: calc(#{$callout_width} + #{$shiftval})\n    \n    @if $inset != null\n      margin: 0 0 rv($inset) 0\n    \n    > *:first-child\n      margin-top: 0\n      padding-top: 0\n      \n    > *:last-child\n      margin-bottom: 0\n      padding-bottom: 0\n    \n    @if $direction == 'left'    \n      float: left\n      text-align: right\n      \n      @if $inset == null\n        right: calc(#{$shiftval} + var(--callout-width))\n        margin-right: calc((#{$shiftval} + var(--callout-width)) * -1)\n      @else\n        padding-right: rv($inset)\n        right: calc(#{$shiftval} + (var(--callout-width)/2))\n        margin-right: calc((#{$shiftval} + (var(--callout-width)/2)) * -1)\n        \n    @if $direction == 'right'    \n      float: right\n      \n      @if $inset == null\n        left: calc(#{$shiftval} + var(--callout-width))\n        margin-left: calc((#{$shiftval} + var(--callout-width)) * -1)\n      @else\n        padding-left: rv($inset)\n        left: calc(#{$shiftval} + (var(--callout-width)/2))\n        margin-left: calc((#{$shiftval} + (var(--callout-width)/2)) * -1)\n","/** \n *  @file _table_collection.sass \n *  @category Base table styles\n *  @component standardized_tables\n *  @description Basic styling for customized tables */\n\n\ntable\n  width: 100%\n  border-collapse: collapse\n    \nthead\n  border: 0\n  background-color: $row_header_bg\n    \n  tr\n    border: 0\n    \ntbody\n  border-width: 0px\n\n  tr\n    background-color: $row_bg_color\n    \n    &:first-child\n      border-top: $table_border_width solid $row_border_color\n\n  \n    &:hover\n      background-color: $row_zebra_stripe_color\n    \n      td, td a\n        color: inherit\n                \n      a\n        text-decoration: underline\ntr\n  border-bottom: $table_border_width solid $row_border_color\n        \nth, td\n  vertical-align: top\n  margin: 0\n  padding: rv(-2)\n  +font-size(-1)\n  background-color: transparent\n  +bp(lrg)\n    min-width: 125px // Evens out column spacing on generic tables. Needs testing.\n    \n  p, div\n    font-size: inherit\n\ntd\n  color: $row_text_color\n\nth\n  color: $row_header_color\n  margin: 0\n  text-align: left\n  text-transform: uppercase\n  font-weight: $boldfw\n  border-bottom: 0","/* \n   @file _title_section.sass \n   @category 30_typography\n   @theme LOCAL\n   @description Defines various type classes */\n\nbody\n  padding: rv(1)\n","/* \n   @file _title_section.sass \n   @category 30_typography\n   @theme LOCAL\n   @description Defines various type classes */\n\nhtml\n  font-weight: $light\n  color: neutral(90)\n  \n\n.slogan\n  font-family: $altfont\n  font-size: rv(-1)\n  \n.deck\n  font-family: $altfont\n  +font-size(1)\n  line-height: 1.5\n  \n  p\n    font-size: inherit\n    font-family: inherit\n    \n    &:last-child\n      margin-bottom: 0\n    \nlabel, .label\n  text-transform: uppercase\n  font-weight: $normal\n  +font-size(-1)\n  \ndt\n  font-weight: $bold\n  +font-size(-1)\n  margin-bottom: 0\n\n.attribution, .field_attribution\n  display: flex\n  flex-direction: row\n  align-items: center\n  \n  &:before\n    margin-right: rv(-3)\n    content: ''\n    display: block\n    width: rv(-2)\n    height: rv(-2)\n    background: url(get_svg_url(ui/arrow)) no-repeat\n    \n  \n.field_byline\n  font-weight: $bold\n  \n  p\n    font-weight: inherit\n  \n.field_tags\n  a\n    text-decoration: underline\n    \na\n  &:hover\n    color: $impact\n\nmain\n  a\n    text-decoration: underline\n    \n","h1\n  font-weight: $normal\n  \nh2\n  font-weight: $normal\n  \nh3\n  font-family: $basefont\n  font-weight: $normal\n  +font-size(1)\n  line-height: 1.4\n  text-transform: none\n  \nheader + h3, date + h3, .surtitle + h3\n  margin-top: rv(-4)\n  \n.block > h2\n  margin-top: 0\n"]}